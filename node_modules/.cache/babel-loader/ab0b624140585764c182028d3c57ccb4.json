{"remainingRequest":"/home/gillian/P/S/S/vuex_web_eboard/node_modules/babel-loader/lib/index.js!/home/gillian/P/S/S/vuex_web_eboard/node_modules/eslint-loader/index.js??ref--13-0!/home/gillian/P/S/S/vuex_web_eboard/src/store.js","dependencies":[{"path":"/home/gillian/P/S/S/vuex_web_eboard/src/store.js","mtime":1584621850414},{"path":"/home/gillian/P/S/S/vuex_web_eboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gillian/P/S/S/vuex_web_eboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gillian/P/S/S/vuex_web_eboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state, token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.user = user;\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://localhost:3000/login',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.token;\n          var user = resp.data.user;\n          localStorage.setItem('token', token); // Add the following line:\n\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    register: function register(_ref2, user) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://localhost:3000/register',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.token;\n          var user = resp.data.user;\n          localStorage.setItem('token', token); // Add the following line:\n\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error', err);\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve) {\n        commit('logout');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  }\n});",{"version":3,"sources":["/home/gillian/P/S/S/vuex_web_eboard/src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","status","token","localStorage","getItem","user","mutations","auth_request","auth_success","auth_error","logout","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","setItem","defaults","headers","common","catch","err","removeItem","register","getters","isLoggedIn","authStatus"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading'\n    },\n\n    auth_success(state, token, user) {\n      state.status = 'success'\n      state.token = token\n      state.user = user\n    },\n\n    auth_error(state) {\n      state.status = 'error'\n    },\n\n    logout(state) {\n      state.status = ''\n      state.token = ''\n    }\n  },\n\n  actions: {\n    login({ commit }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request')\n        axios({ url: 'http://localhost:3000/login', data: user, method: 'POST' })\n          .then(resp => {\n            const token = resp.data.token\n            const user = resp.data.user\n            localStorage.setItem('token', token)\n            // Add the following line:\n            axios.defaults.headers.common['Authorization'] = token\n            commit('auth_success', token, user)\n            resolve(resp)\n          })\n          .catch(err => {\n            commit('auth_error')\n            localStorage.removeItem('token')\n            reject(err)\n          })\n      })\n    },\n\n    register({ commit }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request')\n        axios({ url: 'http://localhost:3000/register', data: user, method: 'POST' })\n          .then(resp => {\n            const token = resp.data.token\n            const user = resp.data.user\n            localStorage.setItem('token', token)\n            // Add the following line:\n            axios.defaults.headers.common['Authorization'] = token\n            commit('auth_success', token, user)\n            resolve(resp)\n          })\n          .catch(err => {\n            commit('auth_error', err)\n            localStorage.removeItem('token')\n            reject(err)\n          })\n      })\n    },\n\n    logout({ commit }) {\n      return new Promise((resolve) => {\n        commit('logout')\n        localStorage.removeItem('token')\n        delete axios.defaults.headers.common['Authorization']\n        resolve()\n      })\n    }\n  },\n\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status\n  }\n})"]}]}